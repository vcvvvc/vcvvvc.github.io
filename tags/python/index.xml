<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on VW Blog</title>
    <link>https://vcvvvc.github.io/tags/python/</link>
    <description>Recent content in Python on VW Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 30 Jan 2022 23:18:03 +0800</lastBuildDate>
    <atom:link href="https://vcvvvc.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>何为协程</title>
      <link>https://vcvvvc.github.io/post/%E4%BD%95%E4%B8%BA%E5%8D%8F%E7%A8%8B/</link>
      <pubDate>Sun, 30 Jan 2022 23:18:03 +0800</pubDate>
      <guid>https://vcvvvc.github.io/post/%E4%BD%95%E4%B8%BA%E5%8D%8F%E7%A8%8B/</guid>
      <description>&lt;h2 id=&#34;什么是协程&#34;&gt;什么是协程&lt;/h2&gt;&#xA;&lt;p&gt;进程-&amp;gt;线程-&amp;gt;协程&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Re:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://baike.baidu.com/item/&#34;&gt;https://baike.baidu.com/item/&lt;/a&gt;协程/8652240&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/1916705&#34;&gt;https://cloud.tencent.com/developer/article/1916705&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/172471249&#34;&gt;https://zhuanlan.zhihu.com/p/172471249&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/32218874/answers/updated&#34;&gt;https://www.zhihu.com/question/32218874/answers/updated&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/70256971&#34;&gt;https://zhuanlan.zhihu.com/p/70256971&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.python.org/zh-cn/3/library/asyncio-task.html&#34;&gt;https://docs.python.org/zh-cn/3/library/asyncio-task.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Unity: &lt;a href=&#34;https://developer.unity.cn/projects/61c80ba3edbc2a244ffbcf25&#34;&gt;https://developer.unity.cn/projects/61c80ba3edbc2a244ffbcf25&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.nowcoder.com/discuss/821457&#34;&gt;https://www.nowcoder.com/discuss/821457&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://c.biancheng.net/view/5214.html&#34;&gt;http://c.biancheng.net/view/5214.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/59178345&#34;&gt;https://zhuanlan.zhihu.com/p/59178345&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/337946103&#34;&gt;https://zhuanlan.zhihu.com/p/337946103&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>News-M Tutorial</title>
      <link>https://vcvvvc.github.io/post/news_wps/</link>
      <pubDate>Fri, 27 Aug 2021 16:40:00 +0800</pubDate>
      <guid>https://vcvvvc.github.io/post/news_wps/</guid>
      <description>&lt;h2&gt;&lt;a href=&#34;https://github.com/VcSpace/News-M.git&#34;&gt;https://github.com/VcSpace/News-M.git&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;闻讯——获取主流财经新闻网站新闻信息获取, 将数据聚合、归类并写入表格中 。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;News-M &amp;ndash;News Spider, Crawling news from mainstream financial news websites, categorize and write data into tables .&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;目的&#34;&gt;目的&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;时间与精力是有限的 为了节省查阅信息的时间成本故此创作News-M用来快捷提取有效信息, 节约时间, 放松精力。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Time and energy are limited. In order to save the time cost of consulting information, news-m is created to quickly extract effective information, save time and relax energy.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;运行程序&#34;&gt;运行程序&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#Run&#xA;pip install -r requirements.txt&#xA;python3 main.py&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;如果你想启用网盘功能 在命令行运行&lt;code&gt;bypy info&lt;/code&gt;获取token, 在main.py将&lt;code&gt;bd_flag&lt;/code&gt;改为&lt;code&gt;True&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;If you want to enable the network disk function, run &lt;code&gt;bypy info&lt;/code&gt; on the command line to get the token, and BD will be displayed in &lt;code&gt;main.py&lt;/code&gt; Change &lt;code&gt;bd_flag&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>News M定时运行</title>
      <link>https://vcvvvc.github.io/post/news-m%E5%AE%9A%E6%97%B6%E8%BF%90%E8%A1%8C/</link>
      <pubDate>Tue, 24 Aug 2021 21:50:24 +0800</pubDate>
      <guid>https://vcvvvc.github.io/post/news-m%E5%AE%9A%E6%97%B6%E8%BF%90%E8%A1%8C/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#把原来的main设置为start函数 在末尾添加如下代码即可&#xA;&#xA;#https://blog.csdn.net/ainivip/article/details/106296599&#xA;if __name__ == &amp;#39;__main__&amp;#39;:&#xA;    while True:&#xA;        logger = logging.getLogger()&#xA;        logger.setLevel(logging.INFO)&#xA;        log_time = time.strftime(&amp;#34;%Y_%m_%d&amp;#34;, time.localtime())  # 刷新&#xA;        logfile = &amp;#34;./&amp;#34; + log_time + &amp;#34;.log&amp;#34;&#xA;        fh = logging.FileHandler(logfile,mode=&amp;#39;w&amp;#39;)&#xA;        fh.setLevel(logging.INFO)&#xA;&#xA;        while True:&#xA;            formatter = logging.Formatter(&amp;#34;%(asctime)s - %(filename)s[line:%(lineno)d] - %(levelname)s: %(message)s&amp;#34;)&#xA;            fh.setFormatter(formatter)&#xA;            logger.addHandler(fh)&#xA;            time_now = time.strftime(&amp;#34;%H&amp;#34;, time.localtime())  # 刷新&#xA;            if time_now == &amp;#34;21&amp;#34; or time_now == &amp;#34;10&amp;#34;: # 设置要执行的时间&#xA;                start()&#xA;                logger.info(&amp;#34;sleep(20000) start news_d&amp;#34;)&#xA;                time.sleep(1500)&#xA;            elif time_now == &amp;#34;00&amp;#34;:&#xA;                logger.info(&amp;#34;new day, log end&amp;#34;)&#xA;                time.sleep(6000)&#xA;                break&#xA;            else:&#xA;                logger.info(&amp;#34;wait sleep(600)&amp;#34;)&#xA;                time.sleep(600)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;服务器ssh连接&lt;a href=&#34;https://vcvvvc.github.io/post/linux_ssh_nohup/&#34;&gt;https://vcvvvc.github.io/post/linux_ssh_nohup/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python每天固定时间运行某程序代码</title>
      <link>https://vcvvvc.github.io/post/python%E6%AF%8F%E5%A4%A9%E5%9B%BA%E5%AE%9A%E6%97%B6%E9%97%B4%E8%BF%90%E8%A1%8C%E6%9F%90%E7%A8%8B%E5%BA%8F%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sun, 22 Aug 2021 22:01:44 +0800</pubDate>
      <guid>https://vcvvvc.github.io/post/python%E6%AF%8F%E5%A4%A9%E5%9B%BA%E5%AE%9A%E6%97%B6%E9%97%B4%E8%BF%90%E8%A1%8C%E6%9F%90%E7%A8%8B%E5%BA%8F%E4%BB%A3%E7%A0%81/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import time&#xA;while True:&#xA;    time_now = time.strftime(&amp;#34;%H%M&amp;#34;, time.localtime())  # 刷新&#xA;    if time_now == &amp;#34;00:01&amp;#34;: # 设置要执行的时间&#xA;        # 要执行的代码&#xA;        time.sleep(61) # 停止执行61秒，防止反复运行程序。&#xA;    elif time_now == &amp;#34;08:01&amp;#34;: # 设置要执行的时间:&#xA;        # 要执行的代码&#xA;        time.sleep(61) # 停止执行61秒，防止反复运行程序。&#xA;    elif time_now == &amp;#34;16:01&amp;#34;: # 设置要执行的时间:&#xA;        # 要执行的代码&#xA;        time.sleep(61) # 停止执行61秒，防止反复运行程序。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;re&#34;&gt;Re:&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;原文链接：https://blog.csdn.net/ainivip/article/details/106296599&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>汉程网</title>
      <link>https://vcvvvc.github.io/post/hanchengwang/</link>
      <pubDate>Fri, 09 Jul 2021 22:37:33 +0800</pubDate>
      <guid>https://vcvvvc.github.io/post/hanchengwang/</guid>
      <description>&lt;p&gt;&lt;strong&gt;几天前聚餐小饮一杯48度蒸馏酒，微醺。回家之, 看书有感，口出惊言: &amp;ldquo;道可道也&amp;hellip;， 生之，养之&amp;hellip;&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;趁着还有点意识利用以前写过的项目拼凑了一下获取了一部道德经&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/vcvvvc/hanchengwang.git&#34;&gt;https://github.com/vcvvvc/hanchengwang.git&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;天下皆知美之为美, 恶已; 皆知善为善，斯不善矣。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;项目只需修改参数亦可下载其他古籍， 请自行研究使用&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;项目提供本人制作的道德经成品mobi\word版本, 已内置目录&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;项目提供本人制作的成品mobi\word版本, 已内置目录&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;这是一个公益性网站 请不要修改sleep时间避免给服务器过大压力, 能使用成品就不要再次爬取&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;这是一个公益性网站 请不要修改sleep时间避免给服务器过大压力, 能使用成品就不要再次爬取&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;这是一个公益性网站 请不要修改sleep时间避免给服务器过大压力, 能使用成品就不要再次爬取&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;程序支持跨平台, 但仅测试了mac&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://vcvvvc.github.io/img/hanchengwang/h.jpg&#34; alt=&#34;111&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pymysqlerr 1698</title>
      <link>https://vcvvvc.github.io/post/pymysql_err_1698/</link>
      <pubDate>Mon, 30 Nov 2020 16:24:28 +0800</pubDate>
      <guid>https://vcvvvc.github.io/post/pymysql_err_1698/</guid>
      <description>&lt;p&gt;&lt;code&gt;pymysql.err.OperationalError: (1698, “Access denied for user ‘root’@‘localhost’”)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo mysql -u root&#xA;&#xA;mysql&amp;gt; USE mysql;&#xA;mysql&amp;gt; UPDATE user SET plugin=&amp;#39;mysql_native_password&amp;#39; WHERE User=&amp;#39;root&amp;#39;;&#xA;mysql&amp;gt; FLUSH PRIVILEGES;&#xA;mysql&amp;gt; exit;&#xA;&#xA;service mysql restart&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Python thread parameter transfer</title>
      <link>https://vcvvvc.github.io/post/python_thread_mis/</link>
      <pubDate>Tue, 17 Nov 2020 16:13:32 +0800</pubDate>
      <guid>https://vcvvvc.github.io/post/python_thread_mis/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import threading&#xA;import time&#xA;&#xA;def worker():&#xA;    print “worker”&#xA;   time.sleep(1)&#xA;   return&#xA;&#xA;for i in xrange(5):&#xA;     t = threading.Thread(target=worker)&#xA;     t.start()&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;这段代码就使用了多线程，但是没法传递参数，而实际使用多线程，往往是需要传递参数的，这么写实现传递参数的多线程：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import threading&#xA;import time&#xA;&#xA;def worker(number):&#xA;    print “worker”&#xA;    time.sleep(number)&#xA;    return&#xA;&#xA;for i in xrange(5):&#xA;    t = threading.Thread(target=worker,args=(i,))&#xA;    t.start()&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;第一个参数是线程函数变量，第二个参数args是一个数组变量参数，如果只传递一个值，就只需要i, 如果需要传递多个参数，那么还可以继续传递下去其他的参数，其中的逗号不能少，元组中只包含一个元素时，需要在元素后面添加逗号。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Re:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/chpllp/article/details/54381141&#34;&gt;https://blog.csdn.net/chpllp/article/details/54381141&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Opepyxl sytle</title>
      <link>https://vcvvvc.github.io/post/opepyxl_sytle/</link>
      <pubDate>Sun, 15 Nov 2020 19:14:58 +0800</pubDate>
      <guid>https://vcvvvc.github.io/post/opepyxl_sytle/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;font(字体类)：字号、字体颜色、下划线等&lt;/li&gt;&#xA;&lt;li&gt;fill(填充类)：颜色等&lt;/li&gt;&#xA;&lt;li&gt;border(边框类)：设置单元格边框&lt;/li&gt;&#xA;&lt;li&gt;alignment(位置类)：对齐方式&lt;/li&gt;&#xA;&lt;li&gt;number_format(格式类)：数据格式&lt;/li&gt;&#xA;&lt;li&gt;protection(保护类)：写保护&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; from openpyxl.styles import PatternFill, Border, Side, Alignment, Protection, Font&#xA;&amp;gt;&amp;gt;&amp;gt; font = Font(name=&amp;#39;Calibri&amp;#39;,&#xA;                 size=11,&#xA;                 bold=False,&#xA;                 italic=False,&#xA;                 vertAlign=None,&#xA;                 underline=&amp;#39;none&amp;#39;,&#xA;                 strike=False,&#xA;                 color=&amp;#39;FF000000&amp;#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; fill = PatternFill(fill_type=None,&#xA;                 start_color=&amp;#39;FFFFFFFF&amp;#39;,&#xA;                 end_color=&amp;#39;FF000000&amp;#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; border = Border(left=Side(border_style=None,&#xA;                           color=&amp;#39;FF000000&amp;#39;),&#xA;                 right=Side(border_style=None,&#xA;                            color=&amp;#39;FF000000&amp;#39;),&#xA;                 top=Side(border_style=None,&#xA;                          color=&amp;#39;FF000000&amp;#39;),&#xA;                 bottom=Side(border_style=None,&#xA;                             color=&amp;#39;FF000000&amp;#39;),&#xA;                 diagonal=Side(border_style=None,&#xA;                               color=&amp;#39;FF000000&amp;#39;),&#xA;                 diagonal_direction=0,&#xA;                 outline=Side(border_style=None,&#xA;                               color=&amp;#39;FF000000&amp;#39;),&#xA;                 vertical=Side(border_style=None,&#xA;                               color=&amp;#39;FF000000&amp;#39;),&#xA;                 horizontal=Side(border_style=None,&#xA;                               color=&amp;#39;FF000000&amp;#39;)&#xA;                )&#xA;&amp;gt;&amp;gt;&amp;gt; alignment=Alignment(horizontal=&amp;#39;general&amp;#39;,&#xA;                     vertical=&amp;#39;bottom&amp;#39;,&#xA;                     text_rotation=0,&#xA;                     wrap_text=False,&#xA;                     shrink_to_fit=False,&#xA;                     indent=0)&#xA;&amp;gt;&amp;gt;&amp;gt; number_format = &amp;#39;General&amp;#39;&#xA;&amp;gt;&amp;gt;&amp;gt; protection = Protection(locked=True,&#xA;                         hidden=False)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;以上几种样式（字体、填充、边框、位置和保护）实例一旦被创建实例的属性就不可更改，只能重新创建实例。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
