<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Http on Vc</title>
    <link>https://vcvvvc.github.io/tags/http/</link>
    <description>Recent content in Http on Vc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 10 Feb 2024 15:08:37 +0800</lastBuildDate><atom:link href="https://vcvvvc.github.io/tags/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>理解RESTful</title>
      <link>https://vcvvvc.github.io/post/restful/</link>
      <pubDate>Sat, 10 Feb 2024 15:08:37 +0800</pubDate>
      
      <guid>https://vcvvvc.github.io/post/restful/</guid>
      <description>REST &amp;ndash; REpresentational State Transfer 全称是Resource Representational State Transfer：
通俗来讲就是：资源在网络中以某种表现形式进行状态转移。
分解开来：
Resource：资源，即数据（前面说过网络的核心）。比如 newsfeed，friends等；
Representational：某种表现形式，比如用JSON，XML，JPEG等；
State Transfer：状态变化。通过HTTP动词实现。
用beego写的web server理解RESTful
Reference 怎样用通俗的语言解释REST，以及RESTful？
https://www.zhihu.com/question/28557115
https://www.zhihu.com/question/28557115/answer/48094438
https://www.runoob.com/w3cnote/restful-architecture.html
https://www.ruanyifeng.com/blog/2011/09/restful.html</description>
    </item>
    
    <item>
      <title>Computer_network</title>
      <link>https://vcvvvc.github.io/post/computer_network/</link>
      <pubDate>Thu, 06 May 2021 10:09:44 +0800</pubDate>
      
      <guid>https://vcvvvc.github.io/post/computer_network/</guid>
      <description>计算机网络 应用层 HTTP HTTP（HyperText Transfer Protocol，超文本传输协议）是一种用于分布式、协作式和超媒体信息系统的应用层协议。HTTP 是万维网的数据通信的基础。
Cookie
HTTP 是一种不保存状态，即无状态（stateless）协议。 Cookie 会根据从服务器端发送的响应报文内的一个叫做 Set-Cookie 的 首部字段信息，通知客户端保存 Cookie。 请求方法
OPTIONS
请求一些选项信息，允许客户端查看服务器的性能 GET
请求指定的页面信息，并返回实体主体 HEAD
类似于 get 请求，只不过返回的响应中没有具体的内容，用于获取报头 POST
向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改 PUT
从客户端向服务器传送的数据取代指定的文档的内容 DELETE
请求服务器删除指定的页面 TRACE
回显服务器收到的请求，主要用于测试或诊断 报文
报文
是 HTTP 通信中的基本单位，由 8 位组字节流（octet sequence， 其中 octet 为 8 个比特）组成，通过 HTTP 通信传输。 实体
作为请求或响应的有效载荷数据（补充项）被传输，其内容由实 体首部和实体主体组成。 HTTP 报文的主体用于传输请求或响应的实体主体。 客户端(请求报文)
请求行
用于请求的方法，请求 URI 和 HTTP 版本 状态行
含表明响应结果的状态码，原因短语和 HTTP 版本 首部字段
表示请求和响应的各种条件和属性的各类首部 通用首部 请求首部 响应首部 实体首部 服务端(响应报文) 内容同上</description>
    </item>
    
  </channel>
</rss>
